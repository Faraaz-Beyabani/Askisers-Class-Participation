{"version":3,"sources":["Components/QuestionPreview.js","Components/Answer.js","Components/Logo.js","Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["QuestionPreview","console","log","this","props","question","react_default","a","createElement","Card_default","style","backgroundColor","boxShadow","padding","CardHeader_default","id","avatar","Avatar_default","rounded","QuestionAnswer_default","title","subheader","votes","index_es","borderRadius","component","children","desc","Component","Answer","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","resetUpvotes","setState","upvotes","handleUpvote","upvoteNum","state","isUpvoted","upvoted","isDownvoted","downvoted","handleDownvote","answered","display","CardContent_default","onChange","answerText","CardActions_default","disableActionSpacing","IconButton_default","onClick","icons_index_es","Logo","Dashboard","drawerToggle","drawerOpen","handleOpen","addQuestion","handleClose","newQ","newQuestion","newDesc","time","numPosts","questions","concat","handleAnsOpen","answeredQs","currKey","addAnswer","handleAnsClose","answer","current","e","upvotedQs","upquestions","currIndex","currentTarget","getAttribute","currUpvotes","activeUpvotes","target","isAnswerable","setNewQuestion","value","setNewDesc","setNewAnswer","data","answers","sortByUpvotes","questionArr","sort","b","sortByChron","generateQuestions","sidebar","i","length","currQuestion","push","className","margin","viewQuestion","previewQuestion","activeQuestion","activeDesc","React","createRef","questionInfo","name","sorting","fullScreen","classes","sideList","class","Dialog_default","open","onClose","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","TextField_default","label","width","placeholder","helperText","fullWidth","InputLabelProps","shrink","DialogActions_default","Button_default","variant","color","position","menuButton","Menu_default","Components_Logo","Fab_default","Icon_default","Components_QuestionPreview","Components_Answer","ref","withStyles","theme","SignUpHeader","FormCheckBox","border","type","htmlFor","App","openDashboard","activeScreen","updateName","updateClass","username","password","left","top","transform","App_SignUpHeader","App_FormCheckBox","src_Dashboard","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.768d6920.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"../QuestionPreview.css\";\n\nimport QuestionAnswer from \"@material-ui/icons/QuestionAnswer\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nimport { CardContent, Typography } from \"@material-ui/core\";\n\nclass QuestionPreview extends Component {\n  render() {\n    console.log(\"Question: \" + this.props.question);\n    return (\n      <Card\n        style={{\n          backgroundColor: \"#011627\",\n          boxShadow: \"0px 0px 0px #81d4f9\",\n          padding: \"10px\"\n        }}\n      >\n        <CardHeader\n          id=\"cardHeader\"\n          avatar={\n            <Avatar rounded>\n              {\" \"}\n              <QuestionAnswer />{\" \"}\n            </Avatar>\n          }\n          title={this.props.question}\n          subheader={this.props.votes}\n        />\n        <CardContent\n          style={{\n            backgroundColor: \"#fdecea\",\n            borderRadius: \"0px 0px 5px 5px\"\n          }}\n        >\n          <Typography component=\"p\" children={this.props.desc} />\n        </CardContent>\n      </Card>\n    );\n  }\n}\n\nexport default QuestionPreview;\n","import React, { Component } from \"react\";\nimport \"../AnswerEntry.css\";\nimport \"../SideBar.css\";\n\nimport { Remove, Add} from \"@material-ui/icons\";\nimport QuestionAnswer from \"@material-ui/icons/QuestionAnswer\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nclass Answer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      upvotes: 0,\n      upvoted: false,\n      downvoted:false,\n    };\n  }\n\n  resetUpvotes = () => {\n    this.setState({upvotes: 0});\n  }\n\n  handleUpvote = () => {\n    var upvoteNum = this.state.upvotes;\n    var isUpvoted = this.state.upvoted;\n    var isDownvoted = this.state.downvoted;\n    if(isUpvoted) {\n      upvoteNum -= 1;\n      isUpvoted = false;\n      isDownvoted = false;\n    }\n    else if(isDownvoted) {\n      upvoteNum += 2;\n      isUpvoted = true;\n      isDownvoted = false;\n    }\n    else {\n      upvoteNum += 1;\n      isUpvoted = true;\n      isDownvoted = false;\n    }\n    this.setState({upvotes: upvoteNum, upvoted: isUpvoted, downvoted: isDownvoted});\n  }\n\n  handleDownvote = () => {\n    var upvoteNum = this.state.upvotes;\n    var isUpvoted = this.state.upvoted;\n    var isDownvoted = this.state.downvoted;\n    if(isUpvoted) {\n      upvoteNum -= 2;\n      isUpvoted = false;\n      isDownvoted = true;\n    }\n    else if(isDownvoted) {\n      upvoteNum += 1;\n      isUpvoted = false;\n      isDownvoted = false;\n    }\n    else {\n      upvoteNum -= 1;\n      isUpvoted = false;\n      isDownvoted = true;\n    }\n    this.setState({upvotes: upvoteNum, upvoted: isUpvoted, downvoted: isDownvoted});\n  }\n\n  render() {\n    \n    return (\n      <div>\n      <Card style={this.props.answered ? {} : { display: 'none' }}>\n        <CardHeader\n          id=\"cardHeader\"\n          avatar={\n            <Avatar rounded>\n              {\" \"}\n              <QuestionAnswer />{\" \"}\n            </Avatar>\n          }\n          subheader={this.state.upvotes}\n        />\n        <CardContent onChange={this.resetUpvotes}>\n          {this.props.answerText}\n        </CardContent>\n        <CardActions disableActionSpacing>\n        <IconButton onClick={this.handleUpvote}>\n            <Add/>\n          </IconButton>\n          <IconButton onClick={this.handleDownvote}>\n            <Remove/>\n          </IconButton>\n        </CardActions>\n      </Card>\n      </div>\n    );\n  }\n}\n\nexport default Answer;\n","import React, { Component } from \"react\";\nimport \"../Logo.css\";\n\nclass Logo extends Component {\n  render() {\n    return (\n      <div id=\"LogoHeader\" style={{ backgroundColor: \"#e71d36\" }}>\n        <div id=\"LogoTitle\">Askisers</div>\n      </div>\n    );\n  }\n}\n\nexport default Logo;\n","import React, { Component } from \"react\";\nimport { IconButton, AppBar, Toolbar, Drawer } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport { Add } from \"@material-ui/icons\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport \"./App.css\";\nimport \"./SideBar.css\";\nimport \"./Logo.css\";\n\nimport QuestionPreview from \"./Components/QuestionPreview\";\nimport Answer from \"./Components/Answer\";\nimport questionInfo from \"./Components/QuestionData.json\";\nimport Logo from \"./Components/Logo.js\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nimport Fab from \"@material-ui/core/Fab\";\nimport Icon from \"@material-ui/core/Icon\";\n\nconst styles = theme => ({\n  menuButton: {\n    color: \"white\"\n  }\n});\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    var data = [];\n    var answered = [];\n    var upvoted = [];\n    this.answer = React.createRef();\n    for (var i = 0; i < questionInfo.length; i++) {\n      data.push(\"\");\n      answered.push(false);\n      upvoted.push(false);\n    }\n    console.log(data);\n    this.state = {\n      currKey: 0,\n      previewQuestion: false,\n      questions: questionInfo,\n      answers: data,\n      answeredQs: answered,\n      upvotedQs: upvoted,\n      activeQuestion:\n        \"Hi \" +\n        this.props.name +\n        \", click on a question in the sidebar to view it.\",\n      activeDesc: \"By the way, you look great today!\",\n      activeUpvotes: \"\",\n      isAnswerable: false,\n      // State of whether the answer question modal is open or not\n      addQuestion: false,\n      addAnswer: false,\n      drawerOpen: false,\n      numPosts: 4,\n      sorting: \"chronological\"\n    };\n  }\n\n  drawerToggle = () => {\n    this.setState({ drawerOpen: !this.state.drawerOpen });\n  };\n\n  handleOpen = () => {\n    this.setState({ addQuestion: true });\n  };\n\n  handleClose = () => {\n    let newQ = [\n      {\n        question: this.state.newQuestion,\n        desc: this.state.newDesc,\n        upvotes: 0,\n        time: this.state.numPosts\n      }\n    ];\n    this.setState({\n      questions: this.state.questions.concat(newQ),\n      addQuestion: false,\n      numPosts: this.state.numPosts + 1\n    });\n    console.log(\"New set of questions: \" + this.state.questions);\n  };\n\n  handleAnsOpen = () => {\n    var answered = this.state.answeredQs;\n    answered[this.state.currKey] = false;\n    this.setState({ addAnswer: true, answeredQs: answered });\n  };\n\n  handleAnsClose = () => {\n    var answered = this.state.answeredQs;\n    answered[this.state.currKey] = true;\n    this.answer.current.resetUpvotes();\n    this.setState({ addAnswer: false, answeredQs: answered });\n  };\n\n  handleUpvote = e => {\n    var upvoted = this.state.upvotedQs;\n    var upquestions = this.state.questions;\n    var currIndex = e.currentTarget.getAttribute(\"value\");\n    var currUpvotes = this.state.activeUpvotes;\n    console.log(e.target);\n    if (upvoted[currIndex]) {\n      upquestions[currIndex][\"upvotes\"] -= 1;\n      if (this.state.isAnswerable && this.state.currKey === currIndex)\n        currUpvotes = upquestions[currIndex][\"upvotes\"];\n      upvoted[currIndex] = false;\n    } else {\n      upquestions[currIndex][\"upvotes\"] += 1;\n      if (this.state.isAnswerable && this.state.currKey === currIndex)\n        currUpvotes = upquestions[currIndex][\"upvotes\"];\n      upvoted[currIndex] = true;\n    }\n    this.setState({\n      questions: upquestions,\n      upvotedQs: upvoted,\n      activeUpvotes: currUpvotes\n    });\n  };\n\n  setNewQuestion = e => {\n    this.setState({\n      newQuestion: e.target.value\n    });\n    console.log(\"new value of state: \" + this.state.newQuestion);\n  };\n\n  setNewDesc = e => {\n    this.setState({\n      newDesc: e.target.value\n    });\n    console.log(\"new value of state: \" + this.state.newDesc);\n  };\n\n  setNewAnswer = e => {\n    var data = this.state.answers;\n    data[this.state.currKey] = e.target.value;\n    this.setState({\n      answers: data\n    });\n  };\n\n  sortByUpvotes = () => {\n    console.log(\"SORTED BY UPVOTES!\");\n    const questionArr = this.state.questions;\n\n    questionArr.sort(function(a, b) {\n      return a.upvotes - b.upvotes;\n    });\n    this.setState({ questions: questionArr });\n  };\n\n  sortByChron = () => {\n    console.log(\"SORTED BY TIME!\");\n    const questionArr = this.state.questions;\n\n    questionArr.sort(function(a, b) {\n      return a.time - b.time;\n    });\n\n    this.setState({ questions: questionArr });\n  };\n\n  // Generates all of the question previews from the array\n  // of questions in the state\n  generateQuestions = () => {\n    const questionArr = this.state.questions;\n    console.log(\"QUESTION ARRAY: \" + questionArr[0][\"question\"]);\n    let sidebar = [];\n\n    // Outer loop to create parent\n    for (let i = questionArr.length - 1; i >= 0; i--) {\n      let currQuestion = questionArr[i];\n      //Create the parent and add the children\n      sidebar.push(\n        <div className=\"question\">\n          <div className=\"row\">\n            <div className=\"columnA\">\n              <IconButton onClick={this.handleUpvote} value={i}>\n                <Add value={i} />\n              </IconButton>\n              <p style={{ margin: 0 }}>{currQuestion[\"upvotes\"]}</p>\n            </div>\n            <div\n              id=\"main-question\"\n              className=\"columnB\"\n              value={i}\n              onClick={this.viewQuestion}\n            >\n              {currQuestion[\"question\"]}\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return sidebar;\n  };\n\n  viewQuestion = e => {\n    var currIndex = e.target.getAttribute(\"value\");\n    this.setState({\n      currKey: currIndex,\n      previewQuestion: !this.state.previewQuestion,\n      activeQuestion: this.state.questions[currIndex][\"question\"],\n      activeDesc: this.state.questions[currIndex][\"desc\"],\n      activeUpvotes: this.state.questions[currIndex][\"upvotes\"],\n      isAnswerable: true\n    });\n  };\n\n  render() {\n    const { fullScreen } = this.props;\n    const { classes } = this.props;\n\n    const sideList = (\n      <div className=\"sideDrawer\">\n        <br />\n        <br />\n        <center>\n          <Avatar>{this.props.name[0]}</Avatar>\n          <h1>\n            <div className=\"userName\">{this.props.name}</div>\n          </h1>\n          <div className=\"className\">{this.props.class}</div>\n        </center>\n      </div>\n    );\n\n    return (\n      <div>\n        <Dialog\n          fullScreen={fullScreen}\n          open={this.state.addQuestion}\n          onClose={this.handleClose}\n          aria-labelledby=\"responsive-dialog-title\"\n        >\n          <DialogTitle id=\"responsive-dialog-title\">\n            {\"Create a new post\"}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              <TextField\n                onChange={this.setNewQuestion}\n                id=\"standard-full-width\"\n                label=\"Enter your question below:\"\n                style={{ margin: 8, width: 500 }}\n                placeholder=\"\"\n                helperText=\"\"\n                fullWidth\n                margin=\"normal\"\n                InputLabelProps={{\n                  shrink: true\n                }}\n              />{\" \"}\n            </DialogContentText>\n            <DialogContentText>\n              <TextField\n                onChange={this.setNewDesc}\n                id=\"standard-full-width\"\n                label=\"Enter a detailed description below:\"\n                style={{ margin: 8, width: 500 }}\n                placeholder=\"\"\n                helperText=\"\"\n                fullWidth\n                margin=\"normal\"\n                InputLabelProps={{\n                  shrink: true\n                }}\n              />{\" \"}\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              onClick={this.handleClose}\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ backgroundColor: \"#e71d36\", color: \"#ffffff\" }}\n            >\n              Done\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <AppBar\n          position=\"static\"\n          style={{ backgroundColor: \"#e71d36\", color: \"#ffffff\" }}\n        >\n          <Toolbar>\n            <IconButton\n              onClick={this.drawerToggle}\n              className={classes.menuButton}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Logo />\n          </Toolbar>\n        </AppBar>\n        <Drawer open={this.state.drawerOpen} onClose={this.drawerToggle}>\n          {sideList}\n        </Drawer>\n        <div id=\"sidebarsteve\" className=\"Sidebar-Wrapper\">\n          <br />\n          <center>\n            <Fab variant=\"extended\" onClick={this.sortByChron}>\n              <Icon>access_time</Icon>\n              Sort by Date\n            </Fab>\n            <Fab variant=\"extended\" onClick={this.sortByUpvotes}>\n              <Icon>arrow_upward</Icon>\n              Sort by Upvotes\n            </Fab>\n            <br />\n            <br />\n            <Button\n              onClick={this.handleOpen}\n              variant=\"contained\"\n              style={{ backgroundColor: \"#e71d36\", color: \"#ffffff\" }}\n            >\n              Create a new post\n            </Button>\n          </center>\n          <br />\n          {this.generateQuestions()}\n        </div>\n        <div>\n          <QuestionPreview\n            question={this.state.activeQuestion}\n            votes={this.state.activeUpvotes}\n            desc={this.state.activeDesc}\n          />\n          <br />\n          <div>\n            <center>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={this.handleAnsOpen}\n                style={this.state.isAnswerable ? {backgroundColor: \"#e71d36\", color: \"#ffffff\"} : { display: \"none\" }}\n              >\n                Answer this question\n              </Button>\n            </center>\n            <Dialog\n              open={this.state.addAnswer}\n              onClose={this.handleAnsClose}\n              aria-labelledby=\"form-dialog-title\"\n            >\n              <DialogTitle id=\"form-dialog-title\">Answering</DialogTitle>\n              <DialogContent>\n                <TextField\n                  onChange={this.setNewAnswer}\n                  id=\"standard-full-width\"\n                  label=\"Enter your answer below:\"\n                  style={{ margin: 8, width: 500 }}\n                  placeholder=\"\"\n                  helperText=\"\"\n                  fullWidth\n                  margin=\"normal\"\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                />{\" \"}\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={this.handleAnsClose} color=\"primary\">\n                  Done\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </div>\n          <br />\n          <Answer\n            ref={this.answer}\n            answered={this.state.answeredQs[this.state.currKey]}\n            answerText={this.state.answers[this.state.currKey]}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Dashboard);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"./SideBar.css\";\n\n// import Login from \"./Login\";\nimport Dashboard from \"./Dashboard\";\n\nconst SignUpHeader = props => (\n  <div id=\"signUpHeader\" style={{ backgroundColor: \"#E71D36\" }}>\n    <div id=\"signUpHeaderTitle\" style={{ color: \"#FDFFFC\" }}>\n      Askisers\n    </div>\n  </div>\n);\n\nconst FormCheckBox = props => (\n  <div className=\"signUpRow\" style={{ padding: \"10px\" }}>\n    <input style={{ border: \"#E71D36\" }} id={props.id} type=\"checkbox\" />\n    <label htmlFor={props.id}>{props.label}</label>\n  </div>\n);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      username: \"\",\n      password: \"\",\n      activeScreen: \"Login\",\n      class: \"\"\n    };\n  }\n\n  openDashboard = () => {\n    console.log(\"Head over to dashboard\");\n    this.setState({ activeScreen: \"Dashboard\" });\n  };\n\n  updateName = e => {\n    this.setState({ name: e.target.value });\n    console.log(\"New name: \" + this.state.name);\n  };\n\n  updateClass = e => {\n    this.setState({ class: e.target.value });\n    console.log(\"New class: \" + this.state.class);\n  };\n\n  render() {\n    console.log(\"Current screen: \" + this.state.activeScreen);\n    const activeScreen = this.state.activeScreen;\n\n    return (\n      <div>\n        {activeScreen === \"Login\" ? (\n          <div\n            style={{\n              position: \"absolute\",\n              left: \"50%\",\n              top: \"40%\",\n              transform: \"translate(-50%, -50%)\"\n            }}\n          >\n            <div id=\"signUpContainer\">\n              <div id=\"signUpHeader\" style={{ backgroundColor: \"#e71d36\" }}>\n                <SignUpHeader />\n              </div>\n              <div className=\"signUpRow\">\n                <input\n                  onChange={this.updateName}\n                  type=\"text\"\n                  placeholder=\"First and last name\"\n                />\n              </div>\n              <div className=\"signUpRow\">\n                <input type=\"text\" placeholder=\"Username\" />\n              </div>\n              <div className=\"signUpRow\">\n                <input type=\"password\" placeholder=\"Password\" />\n              </div>\n              <div className=\"signUpRow\">\n                <input\n                  onChange={this.updateClass}\n                  type=\"text\"\n                  placeholder=\"Class Name\"\n                />\n              </div>\n              <FormCheckBox\n                id=\"terms\"\n                label=\"I agree to the terms and conditions\"\n              />\n            </div>{\" \"}\n            <center>\n              <button\n                onClick={this.openDashboard}\n                id=\"signUpButton\"\n                style={{\n                  backgroundColor: \"#E71D36\",\n                  borderRadius: \"5px\",\n                  color: \"#fdffc\"\n                }}\n              >\n                Sign up\n              </button>\n            </center>\n          </div>\n        ) : activeScreen === \"Dashboard\" ? (\n          <Dashboard name={this.state.name} class={this.state.class} />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}