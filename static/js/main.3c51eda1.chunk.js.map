{"version":3,"sources":["logo.svg","Components/AnswerEntry.js","Components/SideBar.js","Components/FullQuestion.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Component","SideBar","react_default","a","createElement","id","className","type","placeholder","index_es","icons_index_es","FullQuestion","Card_default","CardHeader_default","avatar","Avatar_default","rounded","QuestionAnswer_default","action","ArrowUpward_default","title","subheader","CardContent_default","Typography_default","component","App","Components_SideBar","Components_FullQuestion","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3c51eda1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\nimport \"../AnswerEntry.css\"\n\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport QuestionAnswer from '@material-ui/icons/QuestionAnswer';\n\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport TextField from '@material-ui/core/TextField';\n\nimport { IconButton } from \"@material-ui/core\";\n\nclass AnswerEntry extends Component {\n  render() {\n    return  <Card>\n              <CardHeader id=\"cardHeader\"\n                          avatar={<Avatar rounded> <QuestionAnswer></QuestionAnswer> </Avatar>}\n                          subheader=\"num_upvotes\">\n      \n              </CardHeader>\n              <CardContent>\n                <TextField  id=\"answer-entry\"\n                            label=\"Enter your answer\"\n                            placeholder=\"Enter your answer\"\n                            margin=\"normal\"></TextField>\n              </CardContent>\n              <CardActions disableActionSpacing>\n                <IconButton><ArrowDownward></ArrowDownward></IconButton>\n                <IconButton><ArrowUpward></ArrowUpward></IconButton>\n              </CardActions>\n            </Card>;\n  }\n}\n\nexport default AnswerEntry;\n","import React, { Component } from \"react\";\nimport \"../SideBar.css\";\nimport { IconButton, Icon } from \"@material-ui/core\";\nimport { Search, Add } from \"@material-ui/icons\";\n\nclass SideBar extends Component {\n  render() {\n    return (\n      <div id=\"sidebarsteve\">\n        <div className=\"topnav\">\n          <input type=\"text\" placeholder=\"Find a question or topic..\" />\n          <IconButton>\n            <Search />\n          </IconButton>\n        </div>\n        <br />\n        <button className=\"button\">Create a new post!</button>\n        <br />\n        <br />\n        <div id=\"question-title\">Questions</div>\n        <br />\n        <br />\n        <br />\n        <div className=\"question\">\n          <div className=\"row\">\n            <div className=\"columnA\">\n              <IconButton className=\"upvote\">\n                <Add />\n              </IconButton>\n              <br />\n              <p>13</p>\n            </div>\n            <div className=\"columnB\">\n              How do you perform the Pythagorean Theorem? What does it do?\n            </div>\n          </div>\n        </div>\n        <br />\n        <br />\n        <div className=\"question\">\n          <div className=\"row\">\n            <div className=\"columnA\">\n              <IconButton className=\"upvote\">\n                <Add />\n              </IconButton>\n              <br />\n              <p>10</p>\n            </div>\n            <div className=\"columnB\">What do I need to learn how to add?</div>\n          </div>\n        </div>\n        <br />\n        <br />\n        <div className=\"question\">\n          <div className=\"row\">\n            <div className=\"columnA\">\n              <IconButton className=\"upvote\">\n                <Add />\n              </IconButton>\n              <br />\n              <p>7</p>\n            </div>\n            <div className=\"columnB\">\n              If I have an isosceles triangle, what do I do with my other\n              triangles?\n            </div>\n          </div>\n        </div>\n        <br />\n        <br />\n        <div className=\"question\">\n          <div className=\"row\">\n            <div className=\"columnA\">\n              <IconButton className=\"upvote\">\n                <Add />\n              </IconButton>\n              <br />\n              <p>5</p>\n            </div>\n            <div className=\"columnB\">\n              Can someone please explain long division?\n            </div>\n          </div>\n        </div>\n        <br />\n        <br />\n        <div className=\"question\">\n          <div className=\"row\">\n            <div className=\"columnA\">\n              <IconButton className=\"upvote\">\n                <Add />\n              </IconButton>\n              <br />\n              <p>2</p>\n            </div>\n            <div className=\"columnB\">How do I carry a zero?</div>\n          </div>\n        </div>\n        <br />\n        <br />\n        <div className=\"question\">\n          <div className=\"row\">\n            <div className=\"columnA\">\n              <IconButton className=\"upvote\">\n                <Add />\n              </IconButton>\n              <br />\n              <p>0</p>\n            </div>\n            <div className=\"columnB\">\n              Is there any other way for me to find the integral between two\n              points on a parametric equation?\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SideBar;\n","import React, { Component } from \"react\";\nimport \"../FullQuestion.css\";\n\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport QuestionAnswer from \"@material-ui/icons/QuestionAnswer\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nimport { IconButton } from \"@material-ui/core\";\n\nclass FullQuestion extends Component {\n  render() {\n    return (\n      <Card>\n        <CardHeader\n          id=\"cardHeader\"\n          avatar={\n            <Avatar rounded>\n              {\" \"}\n              <QuestionAnswer />{\" \"}\n            </Avatar>\n          }\n          action={\n            <IconButton>\n              <ArrowUpward />\n            </IconButton>\n          }\n          title=\"question_title\"\n          subheader=\"num_upvotes\"\n        />\n        <CardContent>\n          <Typography id=\"questionText\" component=\"p\">\n            question_body\n          </Typography>\n        </CardContent>\n      </Card>\n    );\n  }\n}\n\nexport default FullQuestion;\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport AnswerEntry from \"./Components/AnswerEntry\";\nimport \"./SideBar.css\";\nimport SideBar from \"./Components/SideBar\";\nimport FullQuestion from \"./Components/FullQuestion\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"Sidebar-Wrapper\">\n          <SideBar />\n        </div>\n        <div className=\"Question-Wrapper\">\n          <FullQuestion />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}